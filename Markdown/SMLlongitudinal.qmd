---
title: "Untitled"
format: html
editor: visual
---


```{r}
library(tidyverse)

url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQC8V8v0yeGHO-Ojzlf2jPfzfEoXLJPmX2ii_U2-kjh3ulpj1zAv1mhja2CYrKDm0UoT2TLlPiwqeiU/pub?gid=1048641840&single=true&output=csv"

long <- read_csv(url)
```


```{r}

# Filter data for Smith Mtn. Lake (Blackwater River)
smith_mtn_data <- long %>%
  filter(`Lake/Reservoir` == "Smith Mtn. Lake (Blackwater River)")

# Perform regression for Smith Mtn. Lake (Blackwater River)
model_smith_mtn <- lm(CHLa_mean ~ `Distance (m)`, data = smith_mtn_data)

# Get coefficients and R² for the regression
intercept <- coef(model_smith_mtn)[1]
slope <- coef(model_smith_mtn)[2]
r_squared <- summary(model_smith_mtn)$r.squared
p_value <- summary(model_smith_mtn)$coefficients[2, 4]  # p-value for the slope

# Create the equation label
label_smith_mtn <- paste0("y = ", round(slope, 4), "x ", "+ ", round(intercept, 2), "\n",
                          "R² = ", round(r_squared, 2), "\n",
                          "p = ", round(p_value, 4))


ggplot(smith_mtn_data, aes(x = `Distance (m)`, y = CHLa_mean)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Line of best fit
  labs(x = "Distance (m)", y = "Mean CHLa (ug/L)") +
  theme_minimal() +
  theme(
    axis.line = element_line(color = "black"),        # Make axis lines black
    axis.text = element_text(size = 12),             # Increase font size of axis text
    axis.title = element_text(size = 12)             # Increase font size of axis titles
  ) +
  geom_text(
    aes(x = Inf, y = Inf, label = label_smith_mtn),
    hjust = 1.1, vjust = 1.5,
    size = 3,
    color = "black"
  ) +
  scale_x_continuous(expand = c(0, 0), limits = c(0, 35000))  # Ensure x-axis starts at 0

```


```{r}

library(ggplot2)
library(dplyr)

# Filter data for Smith Mtn. Lake (Blackwater River)
smith_mtn_data <- long %>%
  filter(`Lake/Reservoir` == "Smith Mtn. Lake (Blackwater River)")

# Perform regression for Smith Mtn. Lake (Blackwater River)
model_smith_mtn <- lm(N_mean ~ `Distance (m)`, data = smith_mtn_data)

# Get coefficients and R² for the regression
intercept <- coef(model_smith_mtn)[1]
slope <- coef(model_smith_mtn)[2]
r_squared <- summary(model_smith_mtn)$r.squared
p_value <- summary(model_smith_mtn)$coefficients[2, 4]  # p-value for the slope

# Create the equation label
label_smith_mtn <- paste0("y = ", round(slope, 4), "x ", "+ ", round(intercept, 2), "\n",
                          "R² = ", round(r_squared, 2), "\n",
                          "p = ", round(p_value, 4))


ggplot(smith_mtn_data, aes(x = `Distance (m)`, y = N_mean)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Line of best fit
  labs(x = "Distance (m)", y = "Mean Total N (mg/L)") +
  theme_minimal() +
  theme(
    axis.line = element_line(color = "black"),        # Make axis lines black
    axis.text = element_text(size = 12),             # Increase font size of axis text
    axis.title = element_text(size = 12)             # Increase font size of axis titles
  ) +
  geom_text(
    aes(x = Inf, y = Inf, label = label_smith_mtn),
    hjust = 1.1, vjust = 1.5,
    size = 3,
    color = "black"
  ) +
  scale_x_continuous(expand = c(0, 0), limits = c(0, 35000))  # Ensure x-axis starts at 0


```

```{r}

library(ggplot2)
library(dplyr)

# Filter data for Smith Mtn. Lake (Blackwater River)
smith_mtn_data <- long %>%
  filter(`Lake/Reservoir` == "Smith Mtn. Lake (Blackwater River)")

# Perform regression for Smith Mtn. Lake (Blackwater River)
model_smith_mtn <- lm(P_mean ~ `Distance (m)`, data = smith_mtn_data)

# Get coefficients and R² for the regression
intercept <- coef(model_smith_mtn)[1]
slope <- coef(model_smith_mtn)[2]
r_squared <- summary(model_smith_mtn)$r.squared
p_value <- summary(model_smith_mtn)$coefficients[2, 4]  # p-value for the slope

# Create the equation label
label_smith_mtn <- paste0("y = ", round(slope, 4), "x ", "+ ", round(intercept, 2), "\n",
                          "R² = ", round(r_squared, 2), "\n",
                          "p = ", round(p_value, 4))


ggplot(smith_mtn_data, aes(x = `Distance (m)`, y = N_mean)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Line of best fit
  labs(x = "Distance (m)", y = "Mean Total P (mg/L)") +
  theme_minimal() +
  theme(
    axis.line = element_line(color = "black"),        # Make axis lines black
    axis.text = element_text(size = 12),             # Increase font size of axis text
    axis.title = element_text(size = 12)             # Increase font size of axis titles
  ) +
  geom_text(
    aes(x = Inf, y = Inf, label = label_smith_mtn),
    hjust = 1.1, vjust = 1.5,
    size = 3,
    color = "black"
  ) +
  scale_x_continuous(expand = c(0, 0), limits = c(0, 35000))  # Ensure x-axis starts at 0

```


```{r}
library(ggplot2)
library(dplyr)

# Filter data for Smith Mtn. Lake (Blackwater River)
smith_mtn_data <- long %>%
  filter(`Lake/Reservoir` == "Smith Mtn. Lake (Blackwater River)")

# Perform regression for Smith Mtn. Lake (Blackwater River)
model_smith_mtn <- lm(CHLa_slope ~ `Distance (m)`, data = smith_mtn_data)

# Get coefficients and R² for the regression
intercept <- coef(model_smith_mtn)[1]
slope <- coef(model_smith_mtn)[2]
r_squared <- summary(model_smith_mtn)$r.squared
p_value <- summary(model_smith_mtn)$coefficients[2, 4]  # p-value for the slope

# Create the equation label
label_smith_mtn <- paste0("y = ", round(slope, 4), "x ", "+ ", round(intercept, 2), "\n",
                          "R² = ", round(r_squared, 2), "\n",
                          "p = ", round(p_value, 4))


ggplot(smith_mtn_data, aes(x = `Distance (m)`, y = CHLa_slope)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Line of best fit
  labs(x = "Distance (m)", y = "CHLa Slope (ug/L/y)") +
  theme_minimal() +
  theme(
    axis.line = element_line(color = "black"),        # Make axis lines black
    axis.text = element_text(size = 12),             # Increase font size of axis text
    axis.title = element_text(size = 12)             # Increase font size of axis titles
  ) +
  geom_text(
    aes(x = Inf, y = Inf, label = label_smith_mtn),
    hjust = 1.1, vjust = 1.5,
    size = 3,
    color = "black"
  ) +
  scale_x_continuous(expand = c(0, 0), limits = c(0, 35000))  # Ensure x-axis starts at 0

```


```{r}

library(ggplot2)
library(dplyr)

# Filter data for Smith Mtn. Lake (Blackwater River)
smith_mtn_data <- long %>%
  filter(`Lake/Reservoir` == "Smith Mtn. Lake (Blackwater River)")

# Perform regression for Smith Mtn. Lake (Blackwater River)
model_smith_mtn <- lm(N_slope ~ `Distance (m)`, data = smith_mtn_data)

# Get coefficients and R² for the regression
intercept <- coef(model_smith_mtn)[1]
slope <- coef(model_smith_mtn)[2]
r_squared <- summary(model_smith_mtn)$r.squared
p_value <- summary(model_smith_mtn)$coefficients[2, 4]  # p-value for the slope

# Create the equation label
label_smith_mtn <- paste0("y = ", round(slope, 4), "x ", "+ ", round(intercept, 2), "\n",
                          "R² = ", round(r_squared, 2), "\n",
                          "p = ", round(p_value, 4))

ggplot(smith_mtn_data, aes(x = `Distance (m)`, y = N_slope)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Line of best fit
  labs(x = "Distance (m)", y = "Total N Slope (mg/L/y)") +
  theme_minimal() +
  theme(
    axis.line = element_line(color = "black"),        # Make axis lines black
    axis.text = element_text(size = 12),             # Increase font size of axis text
    axis.title = element_text(size = 12)             # Increase font size of axis titles
  ) +
  geom_text(
    aes(x = Inf, y = Inf, label = label_smith_mtn),
    hjust = 1.1, vjust = 1.5,
    size = 3,
    color = "black"
  ) +
  scale_x_continuous(expand = c(0, 0), limits = c(0, 35000))

```

```{r}
 
library(ggplot2)
library(dplyr)

# Filter data for Smith Mtn. Lake (Blackwater River)
smith_mtn_data <- long %>%
  filter(`Lake/Reservoir` == "Smith Mtn. Lake (Blackwater River)")

# Perform regression for Smith Mtn. Lake (Blackwater River)
model_smith_mtn <- lm(P_slope ~ `Distance (m)`, data = smith_mtn_data)

# Get coefficients and R² for the regression
intercept <- coef(model_smith_mtn)[1]
slope <- coef(model_smith_mtn)[2]
r_squared <- summary(model_smith_mtn)$r.squared
p_value <- summary(model_smith_mtn)$coefficients[2, 4]  # p-value for the slope

# Create the equation label
label_smith_mtn <- paste0("y = ", round(slope, 4), "x ", "+ ", round(intercept, 2), "\n",
                          "R² = ", round(r_squared, 2), "\n",
                          "p = ", round(p_value, 4))

ggplot(smith_mtn_data, aes(x = `Distance (m)`, y = P_slope)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Line of best fit
  labs(x = "Distance (m)", y = "Total P Slope (mg/L/y)") +
  theme_minimal() +
  theme(
    axis.line = element_line(color = "black"),        # Make axis lines black
    axis.text = element_text(size = 12),             # Increase font size of axis text
    axis.title = element_text(size = 12)             # Increase font size of axis titles
  ) +
  geom_text(
    aes(x = Inf, y = Inf, label = label_smith_mtn),
    hjust = 1.1, vjust = 1.5,
    size = 3,
    color = "black"
  ) +
  scale_x_continuous(expand = c(0, 0), limits = c(0, 35000))

```



